{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"te",
				"testPost"
			],
			[
				"c",
				"count"
			],
			[
				"url",
				"urllib2"
			],
			[
				"back",
				"background-color"
			],
			[
				"sender",
				"sender_nickname"
			],
			[
				"json",
				"jsonParsed"
			],
			[
				"de",
				"detectAsyncMode"
			],
			[
				"as",
				"ASYNC_MODE"
			],
			[
				"app",
				"application"
			],
			[
				"F",
				"FCM_URL"
			],
			[
				"post",
				"post_msg"
			],
			[
				"send",
				"send_fcm_notification"
			],
			[
				"fo",
				"football"
			],
			[
				"print",
				"printRoster"
			],
			[
				"team",
				"teamSizes"
			],
			[
				"pl",
				"player_number"
			],
			[
				"f",
				"firstname"
			],
			[
				"ws",
				"wsoc"
			],
			[
				"in",
				"index"
			],
			[
				"At",
				"AttributeType"
			],
			[
				"Att",
				"AttributeName"
			],
			[
				"Attr",
				"AttributeDefinitions"
			],
			[
				"Key",
				"KeySchema"
			],
			[
				"fi",
				"firstName"
			],
			[
				"pla",
				"player_card_line"
			],
			[
				"rost",
				"rosters_urls"
			],
			[
				"put",
				"putItem"
			],
			[
				"creat",
				"createTable"
			],
			[
				"r",
				"root_page"
			],
			[
				"out",
				"outputFile"
			],
			[
				"play",
				"player_card_url"
			],
			[
				"player",
				"player_number_line"
			],
			[
				"d",
				"dataArray"
			],
			[
				"win",
				"winningPieces"
			],
			[
				"LED",
				"LED_ORANGE"
			],
			[
				"new",
				"newPosition"
			],
			[
				"newP",
				"newPieceBlinkThread"
			],
			[
				"blink",
				"blinkNewPiece_Handler"
			],
			[
				"che",
				"checkDiagonal"
			],
			[
				"LED_",
				"LED_OFF"
			],
			[
				"upd",
				"updateDisplay"
			],
			[
				"up",
				"updateColumn"
			],
			[
				"update",
				"updateColumn"
			],
			[
				"dat",
				"dataArray"
			],
			[
				"upda",
				"updateMatrix"
			],
			[
				"ud",
				"updateBoard"
			],
			[
				"board",
				"boardMatrix"
			],
			[
				"game",
				"gameBoard"
			],
			[
				"pro",
				"prototype"
			],
			[
				"remove",
				"removeZeros"
			],
			[
				"l",
				"length"
			],
			[
				"to",
				"toString"
			],
			[
				"get",
				"getElementsByClassName"
			],
			[
				"boar",
				"boardMatrix"
			],
			[
				"ani",
				"animateMoves"
			],
			[
				"moving",
				"movingTiles"
			],
			[
				"animate",
				"animateDists"
			],
			[
				"cl",
				"className"
			],
			[
				"inn",
				"innerHTML"
			],
			[
				"font",
				"font-size"
			],
			[
				"Sans",
				"sans-serif"
			],
			[
				"pa",
				"padding-left"
			],
			[
				"border",
				"border-radius"
			],
			[
				"padd",
				"padding-top"
			],
			[
				"bac",
				"background-color"
			],
			[
				"min",
				"min_costs"
			],
			[
				"cur",
				"current_pos"
			],
			[
				"prin",
				"print_path"
			],
			[
				"ne",
				"neighbor-1"
			],
			[
				"num",
				"num_of_nodes"
			],
			[
				"el",
				"elapsed_secs"
			],
			[
				"nei",
				"neighbor"
			],
			[
				"nu",
				"num_of_nodes"
			],
			[
				"prev",
				"prev_min"
			],
			[
				"curr",
				"current_pos-1"
			],
			[
				"beg",
				"begin"
			],
			[
				"print_",
				"print_path"
			],
			[
				"push",
				"push_queue"
			],
			[
				"cu",
				"current_pos"
			],
			[
				"no",
				"nodes"
			],
			[
				"pop",
				"pop_back"
			],
			[
				"pri",
				"print_neighbors"
			],
			[
				"be",
				"begin-1"
			],
			[
				"path",
				"path_queue"
			],
			[
				"node",
				"node_iter"
			],
			[
				"ed",
				"edges"
			],
			[
				"nod",
				"node_costs"
			],
			[
				"pu",
				"push_back"
			],
			[
				"b",
				"begin"
			],
			[
				"edg",
				"edges"
			],
			[
				"edge",
				"edge_vector"
			],
			[
				"x",
				"x_pos"
			],
			[
				"draw",
				"drawAmplitude"
			]
		]
	},
	"buffers":
	[
		{
			"file": "autoMakeTables.py",
			"settings":
			{
				"buffer_size": 2348,
				"line_ending": "Unix"
			}
		},
		{
			"file": "teamParsers.py",
			"settings":
			{
				"buffer_size": 31795,
				"line_ending": "Unix"
			}
		},
		{
			"file": "userPostsTestScript.py",
			"settings":
			{
				"buffer_size": 823,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 24.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"indent	",
				"Indentation: Convert to Spaces"
			],
			[
				"convert ",
				"Indentation: Convert to Tabs"
			],
			[
				"convert	",
				"Indentation: Convert to Tabs"
			],
			[
				"convert",
				"Indentation: Convert to Tabs"
			],
			[
				"indent",
				"Indentation: Convert to Spaces"
			],
			[
				"conert",
				"Indentation: Convert to Spaces"
			],
			[
				"in",
				"Indentation: Reindent Lines"
			],
			[
				"set syntax: ru",
				"Set Syntax: Ruby"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"set syntax: py",
				"Set Syntax: Python"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			]
		],
		"width": 349.0
	},
	"console":
	{
		"height": 118.0,
		"history":
		[
			"exit",
			"quit",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jeremy/AndroidStudioProjects/PepRally/scripts"
	],
	"file_history":
	[
		"/home/jeremy/AndroidStudioProjects/PepRally/servers/peprally_push/server.py",
		"/home/jeremy/AndroidStudioProjects/PepRally/scripts/test.py",
		"/home/jeremy/AndroidStudioProjects/PepRally/scripts/teamParsers.py",
		"/home/jeremy/Pictures/UT Players/2016/Volleyball/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Track and Field/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Tennis/Womens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Tennis/Mens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Swimming and Diving/Womens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Swimming and Diving/Mens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Softball/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Soccer/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Rowing/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Golf/Womens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Golf/Mens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Football/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Basketball/Womens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Basketball/Mens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/2016/Baseball/fetch_player_card.py",
		"/home/jeremy/Projects/PepRally/scripts/teamParsers.py",
		"/home/jeremy/Projects/PepRally/scripts/testPython.py",
		"/home/jeremy/Projects/PepRally/scripts/teamParsers.pyc",
		"/home/jeremy/Projects/PepRally/scripts/test.py",
		"/home/jeremy/AndroidStudioProjects/PepRally/scripts/credentials.csv",
		"/home/jeremy/AndroidStudioProjects/PepRally/scripts/autoMakeTables.py",
		"/home/jeremy/Projects/PepRally/website/package.json",
		"/home/jeremy/Projects/github/peprally_website/package.json",
		"/home/jeremy/Projects/github/peprally_website/bootstrap/index.html",
		"/home/jeremy/Projects/github/peprally_website/server.js",
		"/home/jeremy/AndroidStudioProjects/PepRally/servers/peprally_socketio/server.js",
		"/home/jeremy/Projects/github/peprally_website/public/index.html",
		"/home/jeremy/AndroidStudioProjects/PepRally/flask/test_script.py",
		"/home/jeremy/Projects/github/python_flask_demo/templates/index.html",
		"/home/jeremy/Projects/github/python_flask_demo/demo.py",
		"/tmp/fz3temp-1/server.py",
		"/home/jeremy/AndroidStudioProjects/PepRally/flask/peprally_socketio/index.html",
		"/home/jeremy/AndroidStudioProjects/PepRally/flask/peprally_socketio/server_socketio.py",
		"/home/jeremy/Projects/PepRally/poster/poster_content.txt",
		"/tmp/fz3temp-1/peprallyapp.wsgi",
		"/home/jeremy/AndroidStudioProjects/PepRally/flask/peprallypush/application.py",
		"/home/jeremy/Projects/github/jw-personal-site/templates/index.html",
		"/tmp/fz3temp-1/server 2.py",
		"/home/jeremy/AndroidStudioProjects/PepRally/flask/server.py",
		"/home/jeremy/Projects/github/flask-site/eb-venv/eb-flask/application.py",
		"/home/jeremy/Pictures/UT Players/Football/fetch_player_card.py",
		"/home/jeremy/Projects/Pep Rally/scripts/test.py",
		"/home/jeremy/Pictures/UT Players/Track and Field/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Volleyball/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Baseball/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Golf/Womens/fetch_player_card.py",
		"/home/jeremy/AndroidStudioProjects/PepRally/scripts/testPython.py",
		"/home/jeremy/Projects/Pep Rally/scripts/testPython.py",
		"/home/jeremy/Projects/Pep Rally/scripts/teamParsers.py",
		"/home/jeremy/Projects/Pep Rally/scripts/test.sh",
		"/home/jeremy/Projects/Pep Rally/scripts/credentials.csv",
		"/home/jeremy/Pictures/UT Players/Golf/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Tennis/Womens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Swimming and Diving/Womens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Softball/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Soccer/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Rowing/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Basketball/Womens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Tennis/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Basketball/Mens/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Swimming and Diving/fetch_player_card.py",
		"/home/jeremy/Pictures/UT Players/Golf/golf.txt",
		"/home/jeremy/Pictures/UT Players/Golf/basketball.txt",
		"/home/jeremy/Pictures/UT Players/Basketball/Mens/basketball.txt",
		"/home/jeremy/Pictures/UT Players/Basketball/Mens/team.txt",
		"/home/jeremy/AndroidStudioProjects/fetch_player_card.py",
		"/home/jeremy/AndroidStudioProjects/out.txt",
		"/home/jeremy/AndroidStudioProjects/team.txt",
		"/home/jeremy/Projects/github/saturdayhax/game/python_test.py",
		"/tmp/fz3temp-1/displayTimer.py",
		"/tmp/fz3temp-1/Getch.py",
		"/tmp/fz3temp-1/displayController.py",
		"/home/jeremy/Projects/github/saturdayhax/game/displayTimer_test.py",
		"/tmp/fz3temp-1/testLED.py",
		"/home/jeremy/Projects/github/saturdayhax/game/thread_benchmark.py",
		"/tmp/fz3temp-1/boardController 2.py",
		"/tmp/fz3temp-1/boardController.py",
		"/home/jeremy/Projects/github/2048_webapp/board.js",
		"/home/jeremy/Projects/github/2048_webapp/2048-webapp.sublime-project",
		"/home/jeremy/github/2048_python/board.py",
		"/home/jeremy/github/2048_python/main.py",
		"/home/jeremy/github/2048Game/main.py",
		"/home/jeremy/Projects/rails/workspace/blog/app/views/comments/show.html.erb",
		"/home/jeremy/Projects/rails/workspace/blog/app/models/comment.rb",
		"/home/jeremy/Projects/rails/workspace/blog/app/controllers/posts_controller.rb",
		"/home/jeremy/Projects/rails/workspace/blog/db/schema.rb",
		"/home/jeremy/Projects/rails/workspace/blog/app/helpers/posts_helper.rb",
		"/home/jeremy/github/codeforce/cut_ribbon/cut_ribbon.c++",
		"/home/jeremy/Projects/rails/workspace/blog/test2.in",
		"/home/jeremy/github/oopni/dijkstra/input.in",
		"/home/jeremy/github/oopni/dijkstra/test.in",
		"/home/jeremy/github/oopni/dijkstra/dijkstra.c++",
		"/home/jeremy/github/oopni/dijkstra/dijkstra2.c++",
		"/home/jeremy/github/oopni/test.in",
		"/home/jeremy/github/oopni/dijkstra.c++",
		"/home/jeremy/github/oopni/input.in",
		"/home/jeremy/Projects/rails/workspace/blog/db/migrate/20150920224716_create_posts.rb",
		"/home/jeremy/Projects/rails/workspace/blog/db/migrate/20150920224914_create_comments.rb",
		"/home/jeremy/Projects/rails/blog/blog/app/controllers/application_controller.rb",
		"/home/jeremy/Projects/rails/blog/blog/app/controllers/concerns/.keep",
		"/home/jeremy/Projects/rails/blog/blog/db/development.sqlite3",
		"/home/jeremy/Projects/rails/blog/blog/db/schema.rb",
		"/home/jeremy/Projects/rails/blog/blog/app/views/comments/index.html.erb",
		"/home/jeremy/Projects/rails/blog/blog/app/models/post.rb",
		"/home/jeremy/Projects/rails/blog/blog/app/models/comment.rb",
		"/home/jeremy/.config/sublime-text-3/Packages/SideBarEnhancements/Side Bar.sublime-settings",
		"/home/jeremy/Dropbox/Projects/2048Game/board.py",
		"/home/jeremy/Dropbox/Projects/2048Game/main.py",
		"/home/jeremy/Projects/visualEqualizer.py",
		"/home/jeremy/Arduino/LED Music Box/LEDs_music_box/LEDs_music_box (copy).ino.bak",
		"/home/jeremy/Arduino/LED Music Box/LEDs_music_box/functions.c",
		"/home/jeremy/Projects/sge-pygame-0.20/examples/pong.py",
		"/home/jeremy/Projects/sge-pygame-0.20/examples/circle_popper.py",
		"/home/jeremy/Dropbox/Projects/2048Game/solver.py"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 82.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"teamSizes",
			"mten",
			"wten",
			"mten",
			"addToDb=True",
			"addToDb",
			"parse_wbball",
			"js",
			"teamSizes",
			"D26B20",
			"f6bf01",
			"fec503",
			"#fed136",
			"form-control",
			"label-availability",
			"app-store-btn",
			"gulp",
			"gulpfile",
			"detectAsyncMode",
			"io",
			"location",
			"buttonbinarycount",
			"initial_connect",
			"index",
			"National",
			"post_header",
			"app",
			"requests",
			"render_template",
			"item['weight']",
			"item['position']",
			"item['number']",
			"item['index']",
			"item['imageURL']",
			"item['firstname'] = firstname",
			"item['lastname'] = lastname",
			"{'team': teamNames[team],",
			"item['hometown']",
			"item['year']",
			"item['height']",
			"item['number']",
			"else if",
			"print item",
			"table.put_item(Item=item)",
			"addToDb):",
			"(table, team, data)",
			"line in js",
			"table, js, team",
			"sportNames",
			"lower",
			"Tevin Mack",
			"mbball",
			"gameOver",
			"clearMatrix",
			"startGame",
			"blinkNewPiece",
			"newPiece",
			"N_GREEN_PINS",
			"N_RED_PINS",
			"dataArray",
			"time",
			"self.update",
			"[0.0.0.0.0],",
			"REFRESH_RATE",
			"sleep",
			"updateMatrix",
			"sleep",
			"prevMatrix",
			"this.animateDists",
			"offset",
			"isNotEmpty",
			"moving",
			".moving",
			"prev",
			"self.boardMatrix",
			"done",
			"inner",
			"span",
			"number",
			"fadeIn",
			"little-box",
			"long long int",
			"long long",
			"int",
			"current_pos",
			"print_costs",
			".back()",
			"prlong_costs",
			"int",
			".path",
			"edges",
			"add_neighbor",
			"push_path",
			"pop_path",
			"node_iter",
			"cout",
			"path_queue",
			"remove_node",
			"path_queue",
			"			\n",
			"map<",
			"stdevArr",
			"colordict",
			"colour",
			"color",
			".\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"addToDb",
			"d77d3c",
			"D26B20",
			"d77d3c",
			"#D26B20",
			"item['Weight']",
			"item['Position']",
			"item['Number']",
			"item['Index']",
			"item['ImageURL']",
			"item['FirstName'] = firstname",
			"item['LastName'] = lastname",
			"{'Team': teamNames[team],",
			"item['Hometown']",
			"item['Year']",
			"item['Height']",
			"elif",
			"if (printRoster): print item",
			"if (addToDb): table.put_item(Item=item)",
			"addToDb=True):",
			"addToDb = True):",
			"(table, team, data, addToDb)",
			"line in data",
			"table, team, data",
			"teamNames",
			"newPosition",
			"[0,0,0,0,0],",
			"number",
			"div",
			"inner",
			"tile",
			"long",
			"print_costs",
			"long"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "autoMakeTables.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2348,
						"regions":
						{
						},
						"selection":
						[
							[
								2052,
								2052
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 738.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "teamParsers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31795,
						"regions":
						{
						},
						"selection":
						[
							[
								31795,
								31795
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 864.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "userPostsTestScript.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 823,
						"regions":
						{
						},
						"selection":
						[
							[
								575,
								575
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 354.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "db_scripts.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"par",
				"teamParsers.py"
			],
			[
				"agen",
				"public/css/agency.css"
			],
			[
				"custom",
				"public/css/custom.css"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 438.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/github/2048_webapp/2048-webapp.sublime-workspace"
			]
		],
		"width": 333.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 229.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
